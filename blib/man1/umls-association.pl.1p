.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "UMLS-ASSOCIATION 1p"
.TH UMLS-ASSOCIATION 1p "2019-05-16" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
umls\-association.pl This program calculates the assocation between 
two concepts or sets of concepts
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
This utility takes two sets of concepts and returns their assocation 
score
.SH "USAGE"
.IX Header "USAGE"
Usage: umls\-assocation.pl [\s-1OPTIONS\s0] CUI_set1 CUI_set2 \-\-matrix Matrix_File \-\-measure Assoc_Measure
.SH "INPUT"
.IX Header "INPUT"
.SS "[CUI_set1] [CUI_set2]"
.IX Subsection "[CUI_set1] [CUI_set2]"
Two sets of CUIs in the \s-1UMLS.\s0 Each \s-1CUI\s0 in the \s-1CUI\s0 set is comma seperated
.PP
[Matrix_File]
.PP
File name containing co-occurrence data in sparse matrix format
.PP
[Assoc_Measure]
.PP
A string specifying the association measure to use
The measure used to calculate the assocation. Recommended = x2
.PP
The package uses the Text::NSP package to do the calculation. 
The measure included within this package are:
.PP
.Vb 10
\&    1.  Frequency
\&    2.  Random
\&    3.  Dice Coefficient
\&    4.  Fishers exact test \- left sided
\&    5.  Fishers exact test \- right sided
\&    6.  Fishers twotailed test \- right sided
\&    7.  Jaccard Coefficient
\&    8.  Log\-likelihood ratio
\&    9.  Mutual Information
\&    10.  Odds Ratio
\&    11.  Pointwise Mutual Information
\&    12. Phi Coefficient
\&    13. Pearson\*(Aqs Chi Squared Test
\&    14. Poisson Stirling Measure
\&    15. T\-score
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
Optional command line arguements
.SS "General Options:"
.IX Subsection "General Options:"
Displays the quick summary of program options.
.PP
\fI\-\-noorder\fR
.IX Subsection "--noorder"
.PP
If selected, the order in which CUIs appear will be disregarded when 
the association score is calculated.
.PP
\fI\-\-lta\fR
.IX Subsection "--lta"
.PP
Linking Term Association \- Calculates the association scores using 
implicit or intermediate relationships between the specified CUIs,
and the count of unique shared co-occurrences.
.PP
\fI\-\-mwa\fR
.IX Subsection "--mwa"
.PP
Minimum Weight Association \- Calculates the association scores using 
implicit or intermediate relationships between the specified CUIs, 
and the minimum co-occurrence count between shared co-occurrences.
.PP
\fI\-\-lsa\fR
.IX Subsection "--lsa"
.PP
Linking Set Association \- Calculates the association scores using the
association between the sets of co-occurring terms of the original terms
.PP
\fI\-\-sbc\fR
.IX Subsection "--sbc"
.PP
Shared B to C association \- Calculates the association scores using
the association between the set of A co-occuring terms, and the 
term C.
.PP
\fI\-\-wsa\fR
.IX Subsection "--wsa"
.PP
Weighted Set Association \- Same as linking set association, but weights
the members of the linking set based on their association with the original
term. The association measure used for weighting is the same as specified
for quantifying association overall (\-\-measure)
.PP
\fI\-\-nonorm\fR
.IX Subsection "--nonorm"
.PP
Indicates that the weights in \s-1WSA\s0 will \s-1NOT\s0 be normalized between 0 and 1
and instrad the direct association score will be used
.PP
\fI\-\-precision N\fR
.IX Subsection "--precision N"
.PP
Displays values up to N places of decimal. (\s-1DEFAULT: 4\s0)
.PP
\fI\-\-help\fR
.IX Subsection "--help"
.PP
Displays the quick summary of program options.
.PP
\fI\-\-version\fR
.IX Subsection "--version"
.PP
Displays the version information.
.SH "OUTPUT"
.IX Header "OUTPUT"
The association between the two concepts (or terms)
.SH "SYSTEM REQUIREMENTS"
.IX Header "SYSTEM REQUIREMENTS"
.IP "\(bu" 4
Perl (version 5.8.5 or better) \- http://www.perl.org
.IP "\(bu" 4
Text::NSP \- http://search.cpan.org/dist/Text\-NSP
.SH "CONTACT US"
.IX Header "CONTACT US"
.Vb 2
\&  If you have any trouble installing and using UMLS\-Assocation, 
\&  please contact us via the users mailing list :
\&    
\&      umls\-association@yahoogroups.com
\&     
\&  You can join this group by going to:
\&    
\&      http://tech.groups.yahoo.com/group/umls\-assocation/
\&     
\&  You may also contact us directly if you prefer :
\&    
\&      Sam Henry: henryst at vcu.edu
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
.Vb 3
\& Bridget T. McInnes, Virginia Commonwealth University 
\& Alexander D. McQuilkin, Virginia Commonwealth University
\& Sam Henry, Virginia Commonwealth University
.Ve
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2015
.PP
.Vb 2
\& Sam Henry, Virginia Commonwealth University 
\& henryst at vcu.edu
.Ve
.PP
This program is free software; you can redistribute it and/or modify it under
the terms of the \s-1GNU\s0 General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.
.PP
This program is distributed in the hope that it will be useful, but \s-1WITHOUT
ANY WARRANTY\s0; without even the implied warranty of \s-1MERCHANTABILITY\s0 or \s-1FITNESS
FOR A PARTICULAR PURPOSE.\s0 See the \s-1GNU\s0 General Public License for more details.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License along with
this program; if not, write to:
.PP
.Vb 3
\& The Free Software Foundation, Inc.,
\& 59 Temple Place \- Suite 330,
\& Boston, MA  02111\-1307, USA.
.Ve
